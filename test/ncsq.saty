@require: stdjareport
@import: ../src/backend
@import: ../src/frontend

let dg1 = NCSqFrontend.([
  [empty; empty; empty];
  [empty; empty; empty];
  [empty];
])

let dg2 = NCSqFrontend.([
  [object ${A}; empty; object ${B}; empty; object ${C}];
  [empty; empty; empty];
  [object ${D}; empty; empty; object ${E}];
])

let dg3 = NCSqFrontend.([
  [object ${A}; arrow right; object ${B}];
  [arrow down; empty; arrow down];
  [object ${C}; arrow right; object ${D}];
])

let dg4 = NCSqFrontend.([
  [object ${A}; arrow right; object ${B}];
  [empty; arrow (rd (1, 1)); arrow down];
  [empty; empty; object ${C}];
])

let dg5 = NCSqFrontend.([
  [object ${A}; arrow right; object ${B}; arrow right; object ${C}];
  [arrow down; empty; arrow (ru (2, 1)); empty; arrow down];
  [object ${D}; arrow right; empty; empty; object ${E}];
])

let dg6 = NCSqFrontend.(open NCSqArrowStyle in [
  [object ${A}; arrow right; object ${B}];
  [arrow ?*?*?:tail down; arrow ?*?*?:dashed (ru (1, 1)); arrow ?*?*?:two-heads down];
  [object ${C}; arrow right; object ${D}];
])

let dg7 = NCSqFrontend.([
  [object ${A}; arrow ?:${f} right; object ${B}];
  [arrow ?*?:${g} down; empty; arrow ?:${h} down];
  [object ${C}; arrow ?*?:${k} right; object ${D}];
])

let dg8 = NCSqFrontend.([
  [object ${A}; arrow right; object ${B}; arrow ?:${\text!{looooooooooooooooooooooooooooooooooong label}} right; empty; empty; object ${C}];
  [arrow ?*?:${\frac{\frac{\frac{a}{b}}{\frac{c}{d}}}{\frac{\frac{e}{f}}{\frac{g}{h}}}} down; empty; arrow down; empty; empty; empty; arrow down];
  [empty; empty; object ${D}; arrow right; object ${\text!{HUGE OBJECT}}; arrow right; object ${F}];
  [empty; empty; arrow down; empty; arrow down; empty; arrow down];
  [object ${G}; arrow right; object ${\text!{LARGE OBJECT}}; arrow ?:${\text!{short label}} right; object ${I}; empty; empty];
  [arrow down; empty; empty; empty; arrow down; empty; empty];
  [object ${J}; arrow ?*?:${\text!{another looooooooooooooooooooooooooooooooong label}} right; empty; empty; object ${K}; arrow right; object ${L}];
])

let dg9 = NCSqFrontend.(open NCSqArrowStyle in [
  [object ${A}; arrow ?:${f} right; object ${X}];
  [arrow ?:${\sim}?:${i}?:tail down ; arrow ?:${\text!{filler}}?*?:dashed (ru (1, 1)); arrow ?:${p}?*?:two-heads down];
  [object ${B}; arrow ?*?:${g} right; object ${Y}];
])

let dg10 = NCSqFrontend.([
  [object ${A}; stack vertical [
    arrow ?:${f} right;
    arrow ?*?:${g} right;
  ]; object ${B}];
])

let dg11 = NCSqFrontend.([
  [object ${A}];
  [stack horizontal [
    arrow ?:${f} up;
    object ${\dashv};
    arrow ?:${g} down;
  ]];
  [object ${B}];
])

in

document (|
  title = {NCSq test};
  author = {Taichi Uemura};
|) '<
  +p{
    A diagram of empty cells.
    \NCSqFrontend.cd(dg1);%
    A diagram of objects.
    \NCSqFrontend.cd(dg2);%
    A diagram of objects and arrows.
    \NCSqFrontend.cd(dg3);%
    A diagonal arrow.
    \NCSqFrontend.cd(dg4);%
    Another diagonal arrow.
    \NCSqFrontend.cd(dg5);%
    Changing arrow styles.
    \NCSqFrontend.cd(dg6);%
    Arrow labels.
    \NCSqFrontend.cd(dg7);%
    Complex example.
    \NCSqFrontend.cd(dg8);%
    Diagonal arrows with labels.
    \NCSqFrontend.cd(dg9);%
    Stacks.
    \NCSqFrontend.cd(dg10);%
    \NCSqFrontend.cd(dg11);%
  }
>

% Local Variables:
% satysfi-program-options: ("-b" "--debug-show-bbox" "--debug-show-block-bbox")
% End:
