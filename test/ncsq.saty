@require: stdjareport
@import: ../src/ncsq

let dg1 = NCSq.([
  [empty; empty; empty];
  [empty; empty; empty];
  [empty];
])

let dg2 = NCSq.([
  [object ${A}; empty; object ${B}; empty; object ${C}];
  [empty; empty; empty];
  [object ${D}; empty; empty; object ${E}];
])

let dg3 = NCSq.([
  [object ${A}; arrow right; object ${B}];
  [arrow down; empty; arrow down];
  [object ${C}; arrow right; object ${D}];
])

let dg4 = NCSq.([
  [object ${A}; arrow right; object ${B}];
  [empty; arrow (rd (1, 1)); arrow down];
  [empty; empty; object ${C}];
])

let dg5 = NCSq.([
  [object ${A}; arrow right; object ${B}; arrow right; object ${C}];
  [arrow down; empty; arrow (ru (2, 1)); empty; arrow down];
  [object ${D}; arrow right; empty; empty; object ${E}];
])

let dg6 = NCSq.(open NCSqArrowStyle in [
  [object ${A}; arrow right; object ${B}];
  [arrow ?*?*?:tail down; arrow ?*?*?:dashed (ru (1, 1)); arrow ?*?*?:two-heads down];
  [object ${C}; arrow right; object ${D}];
])

let dg7 = NCSq.([
  [object ${A}; arrow ?:${f} right; object ${B}];
  [arrow ?*?:${g} down; empty; arrow ?:${h} down];
  [object ${C}; arrow ?*?:${k} right; object ${D}];
])

let dg8 = NCSq.([
  [object ${A}; arrow right; object ${B}; arrow ?:${\text!{looooooooooooooooooooooooooooooooooong label}} right; empty; empty; object ${C}];
  [arrow ?*?:${\frac{\frac{\frac{a}{b}}{\frac{c}{d}}}{\frac{\frac{e}{f}}{\frac{g}{h}}}} down; empty; arrow down; empty; empty; empty; arrow down];
  [empty; empty; object ${D}; arrow right; object ${\text!{HUGE OBJECT}}; arrow right; object ${F}];
  [empty; empty; arrow down; empty; arrow down; empty; arrow down];
  [object ${G}; arrow right; object ${\text!{LARGE OBJECT}}; arrow ?:${\text!{short label}} right; object ${I}; empty; empty];
  [arrow down; empty; empty; empty; arrow down; empty; empty];
  [object ${J}; arrow ?*?:${\text!{another looooooooooooooooooooooooooooooooong label}} right; empty; empty; object ${K}; arrow right; object ${L}];
])

let dg9 = NCSq.(open NCSqArrowStyle in [
  [object ${A}; arrow ?:${f} right; object ${X}];
  [arrow ?:${\sim}?:${i}?:tail down ; arrow ?:${\text!{filler}}?*?:dashed (ru (1, 1)); arrow ?:${p}?*?:two-heads down];
  [object ${B}; arrow ?*?:${g} right; object ${Y}];
])

let dg10 = NCSq.([
  [object ${A}; stack vertical [
    arrow ?:${f} right;
    arrow ?*?:${g} right;
  ]; object ${B}];
])

let dg11 = NCSq.([
  [object ${A}];
  [stack horizontal [
    arrow ?:${f} up;
    object ${\dashv};
    arrow ?:${g} down;
  ]];
  [object ${B}];
])

let dg12 = NCSq.([
  [object ${A}; stack vertical [
    arrow ?:${f_{1}} right;
    arrow ?:${f_{2}} left;
  ]; object ${B}];
  [arrow ?*?:${g} down; arrow ?*?:${h} (ru (1, 1)); arrow down];
  [object ${C}; arrow ?*?:${k} right; object ${D}];
])

let dg13 = NCSq.([
  [object ${A}; arrow right; object ${B}];
  [arrow down; empty; arrow down];
  [object ${C}; arrow right; object ${D}];
  [arrow down; empty; arrow down];
  [object ${E}; arrow right; object ${F}];
])

let dg14 = NCSq.([
  [object ${A}; arrow right; object ${B}];
  [arrow down; empty; arrow down];
  [object ${C'}; arrow right; object ${D'}];
  [arrow down; empty; arrow down];
  [object ${E}; arrow right; object ${F}];
])

let dg15 = NCSq.(open NCSqArrowStyle in [
  [object ${A}; empty; arrow ?:${f} right; empty; object ${B}];
  [empty; empty; point; empty; empty];
  [arrow ?*?:${g} down; empty; arrow ?:${\text!{loooooooooooooooooooooong label}}?*?:solid-2 down; empty; arrow ?:${h} down];
  [empty; empty; point; empty; empty];
  [object ${C}; empty; arrow ?*?:${k} right; empty; object ${D}];
])

let dg16 = NCSq.(open NCSqArrowStyle in [
  [object ${X}; arrow ?:${g}?*?:line right; point];
  [arrow ?*?:${f}?:line down; arrow ?*?:${\paren{f, g}}?:dashed (rd (1, 1)); empty; arrow (rd (1, 1))];
  [point; empty; object ${A \times_{C} B}; arrow ?*?:${q} right; object ${B}];
  [empty; arrow (rd (1, 1)); arrow ?:${p} down; empty; arrow down];
  [empty; empty; object ${A}; arrow right; object ${C}];
])

let dg17 = NCSq.(open NCSqArrowStyle in [
  [object ${A}; empty ; arrow ?:${f} right; empty; object ${B}; empty; empty];
  [empty; arrow ?:${g} (rd (1, 1)); empty; empty; arrow ?*?:${b}?:line down;
   arrow ?:${h} (rd (1, 1)); empty];
  [arrow ?*?:${a} down; empty; object ${C}; arrow ?*?:${k}?:line right;
   crossing horizontal; arrow right ; object ${D}];
  [empty; empty; arrow ?*?:${c}?:line down; empty; arrow down; empty; empty];
  [object ${A'}; arrow ?*?*?:line right; crossing vertical;
   arrow ?*?:${f'} right; object ${B'}; empty; arrow ?:${d} down];
  [empty; arrow ?*?:${g'} (rd (1, 1)); arrow down; empty; empty;
   arrow ?*?:${h'} (rd (1, 1)); empty];
  [arrow down; empty; object ${C'}; empty; arrow ?*?:${k'} right;
   empty; object ${D'}];
])

let dg18 = NCSq.([
  [object ${A}; eqarrow right; object ${A}];
  [arrow down; empty; arrow down];
  [object ${B}; arrow ?*?:${f} right; object ${C}];
])

in

document (|
  title = {NCSq test};
  author = {Taichi Uemura};
|) '<
  +p{
    A diagram of empty cells.
    \NCSq.cd(dg1);%
    A diagram of objects.
    \NCSq.cd(dg2);%
    A diagram of objects and arrows.
    \NCSq.cd(dg3);%
    A diagonal arrow.
    \NCSq.cd(dg4);%
    Another diagonal arrow.
    \NCSq.cd(dg5);%
    Changing arrow styles.
    \NCSq.cd(dg6);%
    Arrow labels.
    \NCSq.cd(dg7);%
    Complex example.
    \NCSq.cd(dg8);%
    Diagonal arrows with labels.
    \NCSq.cd(dg9);%
    Stacks.
    \NCSq.cd(dg10);%
    \NCSq.cd(dg11);%
    Diagram transformation.
    \NCSq.cd(dg12);%
    Invert vertically.
    \NCSq.cd(NCSq.invert-v dg12);%
    Invert horizontally.
    \NCSq.cd(NCSq.invert-h dg12);%
    Transpose.
    \NCSq.cd(NCSq.transpose dg12);%
    Math command.
    \eqn(${
      \paren{
        \NCSq.cd-m!(dg13)
      } = \paren{
        \NCSq.cd-m!(dg14)
      }
    });%
    2-arrows.
    \NCSq.cd(dg15);%
    Pullback diagram.
    \NCSq.cd(dg16);%
    Cube.
    \NCSq.cd(dg17);%
    Equality arrow.
    \NCSq.cd(dg18);%
  }
>

% Local Variables:
% satysfi-program-options: ("-b" "--debug-show-bbox" "--debug-show-block-bbox")
% End:
